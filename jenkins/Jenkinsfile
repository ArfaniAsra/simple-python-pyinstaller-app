// Scripted Pipeline
node {
    def VOLUME = "${pwd()}/sources:/src"
    def IMAGE = 'cdrx/pyinstaller-linux:python2'
    def timeoutInMinutes = 1 // Waktu jeda dalam menit

    try {
        stage('Build') {
            docker.image('python:3.11.4-alpine3.18').inside {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
                stash name: 'compiled-results', includes: 'sources/*.py*'
            }
        }

        stage('Test') {
            docker.image('qnib/pytest').inside {
                sh 'py.test --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            junit 'test-reports/results.xml'
        }

        stage('Deploy') {
            dir("${BUILD_ID}") {
                unstash name: 'compiled-results'
                sh "docker run --rm -v ${VOLUME} ${IMAGE} 'pyinstaller -F add2vals.py'"
                archiveArtifacts artifacts: "${BUILD_ID}/sources/dist/add2vals", allowEmptyArchive: true
                sh "docker run --rm -v ${VOLUME} ${IMAGE} 'rm -rf build dist'"
            }

            // Mekanisme input message untuk memberikan jeda eksekusi
            timeout(time: timeoutInMinutes, unit: 'MINUTES') {
                // Simulasi berjalan selama 1 menit
                sh "sleep ${timeoutInMinutes * 60}"
            }
        }
    } catch (Exception e) {
        currentBuild.result = 'UNSTABLE'
        throw e
    } finally {
        junit '**/test-reports/*.xml'
    }
}